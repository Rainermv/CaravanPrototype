//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;


namespace Caravan
{
	public class BehaviourHealthPoints : GameElementBehaviour
	{

		int _health_points;

		int health_max;

		public BehaviourHealthPoints (GameElement parent, int health_points) : base(parent){

			_health_points = health_max = health_points;

		}

		public override void GameElementDamage (int value){

			_health_points -= value;

			Parent.FlashColor (Color.red, 0.5f);

		}

		public override void GameElementLateUpdate ()
		{
			if (_health_points <= 0)
				_parent.DestroyGameElement (0, true);
		}

		public override void GameElementUpdateSelection() {
			SelectionInterfaceHandler.GetInstance ().UpdateHealth (_health_points);
		}

		public override void GameElementTouch(){
			SelectionInterfaceHandler.GetInstance ().EnableHealth (true);
		}

		public override void GameElementUpgrade(GameElementBehaviour upgrade_behaviour){
			
			BehaviourHealthPoints health_behaviour = upgrade_behaviour as BehaviourHealthPoints;

			_health_points = _health_points / health_max * health_behaviour._health_points;
			health_max = health_behaviour._health_points;
	
		}

	}
}

