//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;


namespace SoundSystem
{
	[RequireComponent (typeof (AudioSource))]
	[RequireComponent (typeof (AudioSource))]
	public class SoundController : MonoBehaviour
	{

		public AudioClip music_to_play;

		private static SoundController instance;

		public static SoundController GetInstance(){

			if (instance == null) {

				instance = FindObjectOfType<SoundController>();
			}

			return instance;


		}

		public bool Music {
			set{ Music_source_ref.mute = !value;}
			get{ return !Music_source_ref.mute;}
		}

		public bool Sound {
			set{ BGS_source_ref.mute = !value;}
			get{ return !BGS_source_ref.mute;}
		}

		private AudioSource BGS_source_ref;
		private AudioSource Music_source_ref;

		void Awake()
		{
			BGS_source_ref = GetComponents<AudioSource> ()[0];
			Music_source_ref = GetComponents<AudioSource> ()[1];

		}

		void Start(){

			if (music_to_play != null) {
				SetMusic(music_to_play);
				PlayMusic ();
			}

		}

		public void NullWarning(string fuction_name){
			Debug.LogWarning ("SoundSystem - null audioclip on function " + fuction_name);
		}

		public void SetMusic(AudioClip audio){

			if (audio != null)
				Music_source_ref.clip = audio;
			else
				NullWarning("SetClip(AudioClip)");

		}

		public void PlayMusic(){

			Music_source_ref.Play ();
		}

		public void StopMusic(){
			Music_source_ref.Stop ();
		}

		public void PauseMusic(bool pause){

			if (pause)
				Music_source_ref.Pause ();
			else
				Music_source_ref.UnPause ();
		}

		public void PlayBGS(AudioClip audio){

			// Do not play audio when it is muted
			if (BGS_source_ref.mute == true)
				return;

			if (audio != null)
				BGS_source_ref.PlayOneShot (audio);
			else
				NullWarning("PlayClipOneShot(AudioClip)");
		}
	
	}
}

